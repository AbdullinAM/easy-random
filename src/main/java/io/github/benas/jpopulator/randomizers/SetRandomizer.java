/**
 * 
 */
package io.github.benas.jpopulator.randomizers;

import io.github.benas.jpopulator.api.Randomizer;

import java.util.HashSet;
import java.util.Set;

/**
 * A custom randomizer that generates a list of random values from another {@link Randomizer}
 * @author Eric Taix (eric.taix@gmail.com)
 */
public class SetRandomizer<T> extends ListRandomizer<T> {

	/**
	 * Default constructor which will generate a list with a random number of element. Each element is generated by the {@link Randomizer} parameter 
	 * @param elementRandomizer
	 */
	public SetRandomizer(Randomizer<T> elementRandomizer) {
        super(elementRandomizer);
	}
	
	/**
	 * Constructor which will generate a list with a fixed nb of elements. Each element is generated by the {@link Randomizer} parameter 
	 * @param elementRandomizer The randomizer used to generate each element
	 * @param nb The number of elements in the list to generate
	 */
	public SetRandomizer(Randomizer<T> elementRandomizer, int nb) {
		super(elementRandomizer, nb);
	}
	
	/**
	 * Constructor which will generate a list with a random nb of elements. Each element is generated by the {@link Randomizer} parameter 
	 * @param elementRandomizer The randomizer used to generate each element
	 * @param min The minimum number of elements in the list to generate
	 * @param max The maximum number of elements in the list to generate
	 */
	public SetRandomizer(Randomizer<T> elementRandomizer, int min, int max) {
		super(elementRandomizer, min, max);
	}
	
	@Override
	public Set<T> getRandomValue() {
		return new HashSet<T>(super.getRandomValue());
	}

}
